version: 2.1

executors:
  flutter-executor:
    docker:
      - image: cimg/android:2023.12.1-node
  node-executor:
    docker:
      - image: cimg/node:23.0.0

jobs:
  # Setup Flutter
  setup-flutter:
    executor: flutter-executor
    steps:
      - checkout
      - run:
          name: Install Flutter SDK
          command: |
            wget -O flutter.tar.xz https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.29.3-stable.tar.xz
            tar xf flutter.tar.xz -C ${HOME}
            export PATH="$PATH:${HOME}/flutter/bin"
            echo 'export PATH="$PATH:${HOME}/flutter/bin"' >> $BASH_ENV
            flutter precache
            flutter config --no-analytics
            flutter doctor -v
      - run:
          name: Check Dart Version
          command: |
            flutter --version
            dart --version
      - run:
          name: Flutter Pub Get
          command: cd mobile && flutter pub get
      - persist_to_workspace:
          root: .
          paths:
            - mobile/.pub-cache/
            - mobile/.dart_tool/
            - mobile/pubspec.lock
            - ${HOME}/flutter

  # Setup Node.js
  setup-node:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-npm-deps-{{ checksum "backend/package.json" }}
      - run:
          name: Install npm packages
          command: cd backend && npm install
      - save_cache:
          key: v1-npm-deps-{{ checksum "backend/package.json" }}
          paths:
            - backend/node_modules/
      - persist_to_workspace:
          root: .
          paths:
            - backend/node_modules/

  # Tests du backend
  test-backend:
    executor: node-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Initialize Database
          command: cd backend && node app/scripts/initDB.js
      - run:
          name: Run tests
          command: cd backend && npm run test

  # Tests de l'application Flutter
  test-flutter:
    executor: flutter-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run Flutter tests
          command: cd mobile && flutter test

  # Lint Backend
  lint-backend:
    executor: node-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Lint backend code
          command: cd backend && npm run lint || true

  # Lint Flutter
  lint-flutter:
    executor: flutter-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Analyze Flutter code
          command: cd mobile && flutter analyze

  # Build du backend
  build-backend:
    executor: node-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build backend
          command: cd backend && npm ci --production && npm prune --production
      - persist_to_workspace:
          root: .
          paths:
            - backend/
      - store_artifacts:
          path: backend/
          destination: backend-build

  # Build de l'application Flutter (Android)
  build-android:
    executor: flutter-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build APK
          command: cd mobile && flutter build apk --release
      - store_artifacts:
          path: mobile/build/app/outputs/flutter-apk/app-release.apk
          destination: app-release.apk

  # Build de l'application Flutter (iOS)
  build-ios:
    executor: flutter-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build iOS (no codesign)
          command: cd mobile && flutter build ios --release --no-codesign
      - store_artifacts:
          path: mobile/build/ios/iphoneos
          destination: ios-build

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - setup-flutter
      - setup-node
      - test-backend:
          requires:
            - setup-node
      - test-flutter:
          requires:
            - setup-flutter
      - lint-backend:
          requires:
            - setup-node
      - lint-flutter:
          requires:
            - setup-flutter
      - build-backend:
          requires:
            - test-backend
            - lint-backend
          filters:
            branches:
              only:
                - main
            tags:
              only: /.*/
      - build-android:
          requires:
            - test-flutter
            - lint-flutter
          filters:
            branches:
              only:
                - main
            tags:
              only: /.*/
      - build-ios:
          requires:
            - test-flutter
            - lint-flutter
          filters:
            branches:
              only:
                - main
            tags:
              only: /.*/
          type: approval